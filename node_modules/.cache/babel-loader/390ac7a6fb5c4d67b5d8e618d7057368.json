{"ast":null,"code":"import _slicedToArray from \"/Users/patsymac/Documents/BuildWeek/Vacation Planner/Front-End/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/patsymac/Documents/BuildWeek/Vacation Planner/Front-End/src/components/addVacation.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { withFormik, Form, Field } from \"formik\";\n\nfunction addVacation({\n  values,\n  status\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    status && setUser(user => [...user, status]);\n  }, [status]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Fast & the Formikrs\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"New Vacation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Submit!\")), React.createElement(\"div\", {\n    className: \"outCont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, user.map(individ => React.createElement(\"div\", {\n    className: \"output\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    key: individ.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Name:  \", individ.name), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"email:  \", individ.email), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"role:  \", individ.role), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"wisdom:  \", individ.quote))))));\n}\n\nconst FormikAddVacaction = withFormik({\n  mapPropsToValues({\n    name,\n    email,\n    password,\n    quote,\n    termsOfService\n  }) {\n    return {\n      name: name || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      quote: quote || \"\",\n      termsOfService: termsOfService || false\n    };\n  },\n\n  // validationSchema: Yup.object().shape({\n  //     name: Yup.string().required(\"Please Enter Name\"),\n  //     password: Yup.string().required(\"No pass Go! Please Enter your password!\"),\n  //     termsOfService: Yup.boolean().oneOf([true], 'Must Agree to Terms!'),\n  // }),\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post('https://reqres.in/api/users', values).then(response => {\n      console.log(response);\n      setStatus(response.data);\n      resetForm();\n    }).catch(err => console.log(err.response));\n  }\n\n})(addVacation);\nexport default FormikAddVacaction;","map":{"version":3,"sources":["/Users/patsymac/Documents/BuildWeek/Vacation Planner/Front-End/src/components/addVacation.js"],"names":["React","axios","withFormik","Form","Field","addVacation","values","status","useState","user","setUser","useEffect","map","individ","id","name","email","role","quote","FormikAddVacaction","mapPropsToValues","password","termsOfService","handleSubmit","setStatus","resetForm","post","then","response","console","log","data","catch","err"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from \"axios\";\nimport { withFormik, Form, Field } from \"formik\";\n\nfunction addVacation({values, status}) {\n    const [user, setUser] = useState([])\n    useEffect(() => {\n        status && setUser(user => [...user, status])\n      },[status])\n    return (\n        <Container>\n            <h1>Fast & the Formikrs</h1>\n            <Form>\n                <Field type=\"text\" name=\"name\" placeholder=\"New Vacation\"/><br/>\n                <button type=\"submit\">Submit!</button>\n            </Form>\n            <div className=\"outCont\">\n                {user.map(individ => (\n                <div className=\"output\">\n                    <ul key={individ.id}>\n                        <li>Name:  {individ.name}</li>\n                        <li>email:  {individ.email}</li>\n                        <li>role:  {individ.role}</li>\n                        <li>wisdom:  {individ.quote}</li>\n                    </ul>\n                </div>\n                ))}\n            </div>\n        </Container>\n    )\n}\n\nconst FormikAddVacaction = withFormik ({\n    mapPropsToValues({name, email, password, quote, termsOfService }){\n        return{\n            name: name || \"\",\n            email: email || \"\",\n            password: password || \"\",\n            quote: quote || \"\",\n            termsOfService: termsOfService || false\n        };\n    },\n    // validationSchema: Yup.object().shape({\n    //     name: Yup.string().required(\"Please Enter Name\"),\n    //     password: Yup.string().required(\"No pass Go! Please Enter your password!\"),\n    //     termsOfService: Yup.boolean().oneOf([true], 'Must Agree to Terms!'),\n    // }),\n    handleSubmit(values, {setStatus, resetForm}) { \n        axios.post('https://reqres.in/api/users', values) \n              .then(response => { \n                  console.log(response)\n                  setStatus(response.data); \n                  resetForm()\n                }) \n              .catch(err => console.log(err.response));\n        }\n\n})(addVacation);\nexport default FormikAddVacaction;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}